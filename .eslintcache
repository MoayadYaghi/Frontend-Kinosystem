[{"C:\\DevSpace\\frontend-kinosystem\\src\\index.js":"1","C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Navbar\\Navbar.js":"2","C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Footer\\Footer.js":"3","C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Slider\\SliderInfoComponent.js":"4","C:\\DevSpace\\frontend-kinosystem\\src\\Components\\APIStartseite\\FilmInfoComponent.js":"5","C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Button.js":"6","C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Navbar\\MenuItems.js":"7","C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Slider\\SliderAufruf.js":"8","C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Slider\\Slider.js":"9"},{"size":517,"mtime":1607362114636,"results":"10","hashOfConfig":"11"},{"size":1815,"mtime":1608244390698,"results":"12","hashOfConfig":"11"},{"size":2947,"mtime":1608244390695,"results":"13","hashOfConfig":"11"},{"size":1552,"mtime":1608288630510,"results":"14","hashOfConfig":"11"},{"size":1098,"mtime":1608286599040,"results":"15","hashOfConfig":"11"},{"size":644,"mtime":1607777054938,"results":"16","hashOfConfig":"11"},{"size":536,"mtime":1607362114601,"results":"17","hashOfConfig":"11"},{"size":754,"mtime":1608286662641,"results":"18","hashOfConfig":"11"},{"size":1945,"mtime":1608244390701,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"b2xlyo",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"C:\\DevSpace\\frontend-kinosystem\\src\\index.js",[],["44","45"],"C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Navbar\\Navbar.js",["46"],"import React, { Component } from 'react';\r\nimport { Button } from '../Button';\r\nimport {MenuItems} from \"./MenuItems\"\r\nimport'./Navbar.css'\r\nimport logo from \"../../assets/LOGO1.png\";\r\n\r\nclass Navbar extends Component { \r\nstate = { clicked: false}\r\n\r\n    handleClick = () => {\r\n        this.setState({clicked: !this.state.clicked})\r\n    }\r\n \r\n    render() {\r\n        return( \r\n            <div>\r\n                \r\n            <div className = \"Headline1\">\r\n            <a className = \"Link\" alt = \"logo\" href=\"#\">\r\n                    <img alt=\"Logo\" border = \"0\" src={logo} className=\"Logo\"></img></a>\r\n                    \r\n                     </div>\r\n                         \r\n            <nav className=\"NavbarItems\">\r\n                <div className=\"navbar-logo\">\r\n                    \r\n\r\n                </div>\r\n                <h1 className=\"navbar-logo\">  \r\n                </h1>\r\n                \r\n               \r\n                <div className=\"menu-icon\" onClick={this.handleClick}>\r\n                        <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}>\r\n\r\n                        </i>\r\n                </div>\r\n                <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu'}>\r\n                    {MenuItems.map((item, index) => {\r\n                        return (\r\n                        <li key={index}>\r\n                            <a className={item.cName} href={item.url} > \r\n                             {item.titel}   \r\n                            </a>\r\n                        </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                <Button className=\"sign-up-button\"> Sign Up </Button>\r\n                \r\n                \r\n            </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar",["47","48"],"C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Footer\\Footer.js",[],["49","50"],"C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Slider\\SliderInfoComponent.js",["51","52","53"],"import React from \"react\";\r\nimport MoviesSlider from \"./Slider\";\r\nimport SliderAPI from \"../../API_Pulls/SliderAPI\";\r\nimport axios from \"axios\";\r\n\r\nclass SliderInfoComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      informationen: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    SliderAPI.getSliderApi().then((response) => {\r\n      console.log(response);\r\n      let movies = response.data.results;\r\n      console.log(movies.image);\r\n\r\n      this.setState({ informationen: movies });\r\n      console.log(this.state.informationen);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"text-center\">Namen Liste</h1>\r\n        <table className=\"table table-striped\" style={{ marginLeft: 18 + \"%\" }}>\r\n          <thead>\r\n            <tr>\r\n              <td>Film ID</td>\r\n              <td>Film name</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.informationen.map((infos) => (\r\n              <tr key={infos.id}>\r\n                <td> {infos.id}</td>\r\n                <td> {infos.title}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        {this.state.informationen.map((infos) => (\r\n          <div>\r\n            <div>{infos.id}</div>\r\n\r\n            <img src={infos.image} style={{ height: \"200px\" }}></img>\r\n            {/* <MoviesSlider key= {infos.id} images={infos.image} text = {infos.id}/> */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SliderInfoComponent;\r\n","C:\\DevSpace\\frontend-kinosystem\\src\\Components\\APIStartseite\\FilmInfoComponent.js",[],"C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Button.js",[],"C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Navbar\\MenuItems.js",[],"C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Slider\\SliderAufruf.js",[],"C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Slider\\Slider.js",["54"],"import React, { useState } from \"react\";\r\nimport \"../../Components/Slider/Slider.scss\";\r\n/* import Images from \"./Img\";\r\nimport pic1 from \"../../Pics/pic1.jpg\";\r\nimport pic2 from \"../../Pics/pic2.jpg\";\r\nimport pic3 from \"../../Pics/pic3.jpg\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"; */\r\n\r\nvar ReactCSSTransitionGroup = require(\"react-transition-group\");\r\n\r\nfunction MoviesSlider({ images, text }) {\r\n  \r\n  const [index, setIndex] = useState(0);\r\n\r\n  const goLeft = () => {\r\n    const nextIndex = index - 1;\r\n    if (nextIndex < 0) {\r\n      setIndex(images.length - 1);\r\n    } else {\r\n      setIndex(nextIndex);\r\n    }\r\n  };\r\n  const goRight = () => {\r\n    setIndex((index + 1) % images.length);\r\n  };\r\n\r\n  return (\r\n    images.length > 0 && (\r\n      <div>\r\n        <div className=\"slider\">\r\n          <button id=\"goLeft\" onClick={goLeft}>\r\n            {\"<\"}\r\n          </button>\r\n          <img className=\"image\" alt=\"\" src={images[index]} />\r\n          <button id=\"goRight\" onClick={goRight}>\r\n            {\">\"}\r\n          </button>\r\n        </div>\r\n        <div className=\"TextDisplay\">\r\n          <div key={index} className=\"slide\">\r\n            {text[index]}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n\r\n  /* // Works with local pics\r\n  //   const [index, setIndex] = useState(0);\r\n  //   let sliderArr = [<Images src={pic1} />, <Images src={pic2} />, <Images src={pic3} />];\r\n\r\n  //   const goLeft = () => { \r\n  //     index === 0 ? setIndex(-100 * (sliderArr.length - 1)) : setIndex(index + 100);\r\n  // };\r\n  //   const goRight = () => {\r\n  //     index === -100 * (sliderArr.length - 1) ? setIndex(0) : setIndex(index - 100);\r\n  // };\r\n\r\n  //   return (\r\n  //     <div className=\"slider\">\r\n  //       <button id=\"goLeft\" onClick={goLeft}>{\"<\"}</button>\r\n  //       <button id=\"goRight\" onClick={goRight}>{\">\"}</button>\r\n  //     </div>\r\n  //   );*/\r\n}\r\n\r\nexport default MoviesSlider;\r\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":19,"column":13,"nodeType":"61","endLine":19,"endColumn":57},{"ruleId":"55","replacedBy":"62"},{"ruleId":"57","replacedBy":"63"},{"ruleId":"55","replacedBy":"64"},{"ruleId":"57","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":20},{"ruleId":"66","severity":1,"message":"70","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":13},{"ruleId":"71","severity":1,"message":"72","line":49,"column":13,"nodeType":"61","endLine":49,"endColumn":64},{"ruleId":"66","severity":1,"message":"73","line":9,"column":5,"nodeType":"68","messageId":"69","endLine":9,"endColumn":28},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["74"],["75"],["74"],["75"],"no-unused-vars","'MoviesSlider' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ReactCSSTransitionGroup' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]