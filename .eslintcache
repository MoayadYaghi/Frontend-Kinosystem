[{"C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Smoroll\\Smoroll.js":"1","C:\\DevSpace\\frontend-kinosystem\\src\\API_Pulls\\GetAllVorstellungenAPI.js":"2","C:\\DevSpace\\frontend-kinosystem\\src\\API_Pulls\\GetAllSaal.js":"3","C:\\DevSpace\\frontend-kinosystem\\src\\Components\\FilmDetails\\FilmDetails.js":"4","C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Sitzplatzreservierung\\Sitzplatzreservierung.js":"5","C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Warenkorb\\Warenkorb.js":"6"},{"size":5765,"mtime":1612784482444,"results":"7","hashOfConfig":"8"},{"size":320,"mtime":1612784541593,"results":"9","hashOfConfig":"8"},{"size":376,"mtime":1612784531527,"results":"10","hashOfConfig":"8"},{"size":8006,"mtime":1612784592054,"results":"11","hashOfConfig":"8"},{"size":23335,"mtime":1612784635359,"results":"12","hashOfConfig":"8"},{"size":19431,"mtime":1612784743971,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b2xlyo",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Smoroll\\Smoroll.js",[],"C:\\DevSpace\\frontend-kinosystem\\src\\API_Pulls\\GetAllVorstellungenAPI.js",[],"C:\\DevSpace\\frontend-kinosystem\\src\\API_Pulls\\GetAllSaal.js",[],"C:\\DevSpace\\frontend-kinosystem\\src\\Components\\FilmDetails\\FilmDetails.js",["27"],"import React from \"react\";\r\nimport FilmById from \"../../API_Pulls/FilmById\";\r\nimport VorstellungByFilm from \"../../API_Pulls/VorstellungByFilm\";\r\nimport \"./FilmDetails.scss\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass FilmDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let wholeWeek = [];\r\n        let today = new Date();\r\n        let weekDay = today.getDay();\r\n        let add = 0;\r\n        for(let i=0; i<6; i++) {\r\n            let monat = today.getMonth() + 1;\r\n\r\n            let tag = today.getDate();\r\n            if(tag<10){\r\n                tag = \"0\" + tag;\r\n            }\r\n            if(monat<10){\r\n                monat = \"0\" + monat;\r\n            }\r\n            let date = tag + '.' + monat + '.' + today.getFullYear();\r\n\r\n            add = 1;\r\n            today.setDate(today.getDate()+add);\r\n            wholeWeek.push(date);\r\n        }\r\n\r\n        this.state = {\r\n            film: \"\",\r\n            vorstellungen: [],\r\n            weekDates: wholeWeek,\r\n            weekDay: weekDay,\r\n            clickedVorstellung: null,\r\n            nextButton: \"\",\r\n            redirect: false\r\n        };\r\n        this.showNext = this.showNext.bind(this);\r\n        this.setRedirect = this.setRedirect.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        let url = window.location.href;\r\n        let filmId = url.split(\"/\")[4];\r\n        FilmById.filmById(filmId).then((response) => {\r\n            this.setState({film: response.data});\r\n        })\r\n        VorstellungByFilm.vorstellungByFilm(filmId).then((response) => {\r\n            console.log(response)\r\n\r\n            let vorstellungenNaechsteWoche = [];\r\n            let alleVorstellungenAktiv = [];\r\n            let dat;\r\n            for(let vorstellung in response.data) {\r\n                let startZeit = response.data[vorstellung].startZeit;\r\n                let split = startZeit.split(\"-\");\r\n                let jahr = split[0];\r\n                let monat = split[1];\r\n                let tag = split[2].split(\"T\")[0];\r\n                let uhrzeit = split[2].split(\"T\")[1].split(\".\")[0];\r\n\r\n\r\n                let datum = tag + \".\" + monat + \".\" + jahr;\r\n                for(dat in this.state.weekDates) {\r\n                    if(this.state.weekDates[dat] == datum) {\r\n                        alleVorstellungenAktiv.push({datum: datum, uhrzeit: uhrzeit, kinosaalId: response.data[vorstellung].saal.id, vorstellungId: response.data[vorstellung].id})\r\n\r\n                    }\r\n                }\r\n            } \r\n            for(dat in this.state.weekDates) {\r\n\r\n                let vorst;\r\n                let vorstellungZuDatum = [];\r\n                for(vorst in alleVorstellungenAktiv) {\r\n                    if(this.state.weekDates[dat] == alleVorstellungenAktiv[vorst].datum) {\r\n                        vorstellungZuDatum.push({uhrzeit: alleVorstellungenAktiv[vorst].uhrzeit, kinosaalId: alleVorstellungenAktiv[vorst].kinosaalId, vorstellungId: alleVorstellungenAktiv[vorst].vorstellungId});\r\n\r\n                    }\r\n                }\r\n                vorstellungenNaechsteWoche.push({datum: this.state.weekDates[dat], vorstellung: vorstellungZuDatum});\r\n            }\r\n            this.setState({vorstellungen: vorstellungenNaechsteWoche});\r\n\r\n        })\r\n    }\r\n\r\n      add = 1;\r\n      today.setDate(today.getDate() + add);\r\n      wholeWeek.push(date);\r\n    }\r\n\r\n    this.state = {\r\n      film: \"\",\r\n      vorstellungen: [],\r\n      weekDates: wholeWeek,\r\n      weekDay: weekDay,\r\n      clickedVorstellung: null,\r\n      nextButton: \"\",\r\n      redirect: false,\r\n    };\r\n    this.showNext = this.showNext.bind(this);\r\n    this.setRedirect = this.setRedirect.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    let url = window.location.href;\r\n    let filmId = url.split(\"http://localhost:3000/FilmDetails/\")[1];\r\n    FilmById.filmById(filmId).then((response) => {\r\n      this.setState({ film: response.data });\r\n    });\r\n    VorstellungByFilm.vorstellungByFilm(filmId).then((response) => {\r\n      console.log(response);\r\n\r\n      let vorstellungenNaechsteWoche = [];\r\n      let alleVorstellungenAktiv = [];\r\n      let dat;\r\n      for (let vorstellung in response.data) {\r\n        let startZeit = response.data[vorstellung].startZeit;\r\n        let split = startZeit.split(\"-\");\r\n        let jahr = split[0];\r\n        let monat = split[1];\r\n        let tag = split[2].split(\"T\")[0];\r\n        let uhrzeit = split[2].split(\"T\")[1].split(\".\")[0];\r\n\r\n        let datum = tag + \".\" + monat + \".\" + jahr;\r\n        for (dat in this.state.weekDates) {\r\n          if (this.state.weekDates[dat] === datum) {\r\n            alleVorstellungenAktiv.push({\r\n              datum: datum,\r\n              uhrzeit: uhrzeit,\r\n              kinosaalId: response.data[vorstellung].saal.id,\r\n              vorstellungId: response.data[vorstellung].id,\r\n            });\r\n          }\r\n        }\r\n      }\r\n      for (dat in this.state.weekDates) {\r\n        let vorst;\r\n        let vorstellungZuDatum = [];\r\n        for (vorst in alleVorstellungenAktiv) {\r\n          if (\r\n            this.state.weekDates[dat] === alleVorstellungenAktiv[vorst].datum\r\n          ) {\r\n            vorstellungZuDatum.push({\r\n              uhrzeit: alleVorstellungenAktiv[vorst].uhrzeit,\r\n              kinosaalId: alleVorstellungenAktiv[vorst].kinosaalId,\r\n              vorstellungId: alleVorstellungenAktiv[vorst].vorstellungId,\r\n            });\r\n          }\r\n        }\r\n        vorstellungenNaechsteWoche.push({\r\n          datum: this.state.weekDates[dat],\r\n          vorstellung: vorstellungZuDatum,\r\n        });\r\n      }\r\n      this.setState({ vorstellungen: vorstellungenNaechsteWoche });\r\n    });\r\n  }\r\n\r\n  showNext(event) {\r\n    this.setState({ clickedVorstellung: event.target.id });\r\n    this.setState({ nextButton: \"True\" });\r\n  }\r\n\r\n  setRedirect = (event) => {\r\n    this.setState({ redirect: true });\r\n  };\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={`/Sitzplatz/${this.state.clickedVorstellung}`} />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"header\"> {this.state.film.name} </h1>\r\n        <div className=\"wrapper\">\r\n          <div className=\"inhalt\">\r\n            <img alt=\" \" className=\"bild\" src={this.state.film.bild} />\r\n            <div>\r\n              <div className=\"beschreibung\">\r\n                {\" \"}\r\n                {this.state.film.beschreibung}{\" \"}\r\n              </div>\r\n              <h1 className=\"vorstellungen\"> Vorstellungen </h1>\r\n              <div className=\"VorstellungWrapper\">\r\n                <div className=\"Woche\">\r\n                  {this.state.vorstellungen.map((daten) => (\r\n                    <div className=\"vorstWrapper\" key={daten.datum}>\r\n                      <h2 className=\"Datum\" key={daten.datum}>\r\n                        {\" \"}\r\n                        {daten.datum}{\" \"}\r\n                      </h2>\r\n                      {daten.vorstellung.map((vorstellung) => (\r\n                        <div className=\"vorstButton\">\r\n                          <button\r\n                            key={vorstellung.vorstellungId}\r\n                            id={vorstellung.vorstellungId}\r\n                            onClick={this.showNext}\r\n                          >\r\n                            {vorstellung.uhrzeit}\r\n                          </button>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"nextButtonWrapper\">\r\n                {this.renderRedirect()}\r\n                <button\r\n                  className=\"nextButton\"\r\n                  onClick={this.setRedirect}\r\n                  disabled={!this.state.nextButton}\r\n                >\r\n                  Weiter zur Sitzplatzreservierung\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FilmDetails;\r\n","C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Sitzplatzreservierung\\Sitzplatzreservierung.js",["28"],"C:\\DevSpace\\frontend-kinosystem\\src\\Components\\Warenkorb\\Warenkorb.js",["29"],{"ruleId":null,"fatal":true,"severity":2,"message":"30","line":91,"column":12},{"ruleId":null,"fatal":true,"severity":2,"message":"31","line":111,"column":9},{"ruleId":null,"fatal":true,"severity":2,"message":"32","line":342,"column":21},"Parsing error: Unexpected token\n\n  89 | \n  90 |       add = 1;\n> 91 |       today.setDate(today.getDate() + add);\n     |            ^\n  92 |       wholeWeek.push(date);\n  93 |     }\n  94 |","Parsing error: Unexpected token, expected \",\"\n\n  109 |           }\n  110 |         }\n> 111 |         this.setState({ frei: freiSitze });\n      |         ^\n  112 |         this.setState({ belegt: belegtSitze });\n  113 |         for (let belegt in belegtSitze) {\n  114 |           let sitz = belegtSitze[belegt];","Parsing error: Expected corresponding JSX closing tag for <div>\n\n  340 |                         </select>\n  341 |                       </label>\n> 342 |                     </form>\n      |                     ^\n  343 | \n  344 |                     <div className=\"PersonenSchrift\">Angaben zur Person</div>\n  345 |"]